import sys
import os
import subprocess
import argparse
import Xlib
import Xlib.display

#arrangeGui function
#TODO just a skeleton, need to figure out wid from title
#is scanning all windows each time too long?
def arrangeGui(disp, title, X, Y, WIDTH, HEIGHT):
    display = Xlib.display.Display(disp) #setup display and root
    root = display.screen().root
    windowIDs = root.get_full_property(display.intern_atom('_NET_CLIENT_LIST'), Xlib.X.AnyPropertyType).value
    for windowID in windowIDs: #scan window IDs and find one with the right name
        window = display.create_resource_object('window', windowID)
        name = window.get_wm_name() # Title
        if name == title:
            #wid = windowID I dont think this is necessary if we break
            break
    #window = display.create_resource_object('window', wid)
    if WIDTH and HEIGHT == 0: #actual arranging here
         window.configure(x = X, y = Y)
         display.sync()
    else:
        window.configure(x = X, y = Y, width = WIDTH, height = HEIGHT)
        display.sync()




# check arguments

description = "Arrange KCWI GUIs"
parser = argparse.ArgumentParser(description=description)
args = parser.parse_args()

if os.environ.get("DISPLAY") is None:
    print("ERROR: must set DISPLAY before running this program")
    sys.exit(1)

# set display variables...
disp = subprocess.Popen("uidisp 1", stdout = subprocess.PIPE, stderr = subprocess.PIPE, shell=True)
(output, err) = disp.communicate()
uidisp1 = output
disp = subprocess.Popen("uidisp 2", stdout = subprocess.PIPE, stderr = subprocess.PIPE, shell=True)
(output, err) = disp.communicate()
uidisp2 = output

# ----------------------------------------------------------------------
# Arrange Guis on the desktops
# ----------------------------------------------------------------------

arrangeGui(uidisp1, 'AutoDisplayB', 430, 25, 728, 861)
arrangeGui(uidisp1, 'AutoDisplayFPC', 1170, 25, 728, 861)
arrangeGui(uidisp2, 'AutoDisplayMAGIQ', 250, 25, 728, 861)
arrangeGui(uidisp2, 'eventsounds', 1600, 700, 0, 0)
arrangeGui(uidisp2, 'Alignment', 1000, 25, 0, 0)


#####Arange using paramiko to ssh
####TODO need to figure out vm-kcwi login info
####and how to execute the arrangeGui function
#key = paramiko.ECDSAKey(data=base64.b64decode(b''))
#client = paramiko.SSHClient()
#client.get_host_keys().add('vm-kcwi', 'ecdsa-sha2-nistp256', key)
#client.connect('vm-kcwi', username='kcwirun', password='outofU!')
#stdin, stdout, stderr = client.exec_command('ls')
#for line in stdout:
#    print('... ' + line.strip('\n'))
#client.close()


sys.exit(0)
